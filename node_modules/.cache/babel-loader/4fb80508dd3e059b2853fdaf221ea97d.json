{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport AgoraRTC__default from 'agora-rtc-sdk-ng';\nexport * from 'agora-rtc-sdk-ng';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar AgoraRTCErrorCode;\n\n(function (AgoraRTCErrorCode) {\n  AgoraRTCErrorCode[\"UNEXPECTED_ERROR\"] = \"UNEXPECTED_ERROR\";\n  AgoraRTCErrorCode[\"UNEXPECTED_RESPONSE\"] = \"UNEXPECTED_RESPONSE\";\n  AgoraRTCErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n  AgoraRTCErrorCode[\"INVALID_PARAMS\"] = \"INVALID_PARAMS\";\n  AgoraRTCErrorCode[\"NOT_SUPPORTED\"] = \"NOT_SUPPORTED\";\n  AgoraRTCErrorCode[\"INVALID_OPERATION\"] = \"INVALID_OPERATION\";\n  AgoraRTCErrorCode[\"OPERATION_ABORTED\"] = \"OPERATION_ABORTED\";\n  AgoraRTCErrorCode[\"WEB_SECURITY_RESTRICT\"] = \"WEB_SECURITY_RESTRICT\";\n  AgoraRTCErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n  AgoraRTCErrorCode[\"NETWORK_TIMEOUT\"] = \"NETWORK_TIMEOUT\";\n  AgoraRTCErrorCode[\"NETWORK_RESPONSE_ERROR\"] = \"NETWORK_RESPONSE_ERROR\";\n  AgoraRTCErrorCode[\"API_INVOKE_TIMEOUT\"] = \"API_INVOKE_TIMEOUT\";\n  AgoraRTCErrorCode[\"ENUMERATE_DEVICES_FAILED\"] = \"ENUMERATE_DEVICES_FAILED\";\n  AgoraRTCErrorCode[\"DEVICE_NOT_FOUND\"] = \"DEVICE_NOT_FOUND\";\n  AgoraRTCErrorCode[\"ELECTRON_IS_NULL\"] = \"ELECTRON_IS_NULL\";\n  AgoraRTCErrorCode[\"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\"] = \"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\";\n  AgoraRTCErrorCode[\"CHROME_PLUGIN_NO_RESPONSE\"] = \"CHROME_PLUGIN_NO_RESPONSE\";\n  AgoraRTCErrorCode[\"CHROME_PLUGIN_NOT_INSTALL\"] = \"CHROME_PLUGIN_NOT_INSTALL\";\n  AgoraRTCErrorCode[\"MEDIA_OPTION_INVALID\"] = \"MEDIA_OPTION_INVALID\";\n  AgoraRTCErrorCode[\"PERMISSION_DENIED\"] = \"PERMISSION_DENIED\";\n  AgoraRTCErrorCode[\"CONSTRAINT_NOT_SATISFIED\"] = \"CONSTRAINT_NOT_SATISFIED\";\n  AgoraRTCErrorCode[\"TRACK_IS_DISABLED\"] = \"TRACK_IS_DISABLED\";\n  AgoraRTCErrorCode[\"SHARE_AUDIO_NOT_ALLOWED\"] = \"SHARE_AUDIO_NOT_ALLOWED\";\n  AgoraRTCErrorCode[\"LOW_STREAM_ENCODING_ERROR\"] = \"LOW_STREAM_ENCODING_ERROR\";\n  AgoraRTCErrorCode[\"INVALID_UINT_UID_FROM_STRING_UID\"] = \"INVALID_UINT_UID_FROM_STRING_UID\";\n  AgoraRTCErrorCode[\"CAN_NOT_GET_PROXY_SERVER\"] = \"CAN_NOT_GET_PROXY_SERVER\";\n  AgoraRTCErrorCode[\"CAN_NOT_GET_GATEWAY_SERVER\"] = \"CAN_NOT_GET_GATEWAY_SERVER\";\n  AgoraRTCErrorCode[\"VOID_GATEWAY_ADDRESS\"] = \"VOID_GATEWAY_ADDRESS\";\n  AgoraRTCErrorCode[\"UID_CONFLICT\"] = \"UID_CONFLICT\";\n  AgoraRTCErrorCode[\"INVALID_LOCAL_TRACK\"] = \"INVALID_LOCAL_TRACK\";\n  AgoraRTCErrorCode[\"INVALID_TRACK\"] = \"INVALID_TRACK\";\n  AgoraRTCErrorCode[\"SENDER_NOT_FOUND\"] = \"SENDER_NOT_FOUND\";\n  AgoraRTCErrorCode[\"CREATE_OFFER_FAILED\"] = \"CREATE_OFFER_FAILED\";\n  AgoraRTCErrorCode[\"SET_ANSWER_FAILED\"] = \"SET_ANSWER_FAILED\";\n  AgoraRTCErrorCode[\"ICE_FAILED\"] = \"ICE_FAILED\";\n  AgoraRTCErrorCode[\"PC_CLOSED\"] = \"PC_CLOSED\";\n  AgoraRTCErrorCode[\"SENDER_REPLACE_FAILED\"] = \"SENDER_REPLACE_FAILED\";\n  AgoraRTCErrorCode[\"GATEWAY_P2P_LOST\"] = \"GATEWAY_P2P_LOST\";\n  AgoraRTCErrorCode[\"NO_ICE_CANDIDATE\"] = \"NO_ICE_CANDIDATE\";\n  AgoraRTCErrorCode[\"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\"] = \"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\";\n  AgoraRTCErrorCode[\"EXIST_DISABLED_VIDEO_TRACK\"] = \"EXIST_DISABLED_VIDEO_TRACK\";\n  AgoraRTCErrorCode[\"INVALID_REMOTE_USER\"] = \"INVALID_REMOTE_USER\";\n  AgoraRTCErrorCode[\"REMOTE_USER_IS_NOT_PUBLISHED\"] = \"REMOTE_USER_IS_NOT_PUBLISHED\";\n  AgoraRTCErrorCode[\"CUSTOM_REPORT_SEND_FAILED\"] = \"CUSTOM_REPORT_SEND_FAILED\";\n  AgoraRTCErrorCode[\"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\"] = \"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\";\n  AgoraRTCErrorCode[\"FETCH_AUDIO_FILE_FAILED\"] = \"FETCH_AUDIO_FILE_FAILED\";\n  AgoraRTCErrorCode[\"READ_LOCAL_AUDIO_FILE_ERROR\"] = \"READ_LOCAL_AUDIO_FILE_ERROR\";\n  AgoraRTCErrorCode[\"DECODE_AUDIO_FILE_FAILED\"] = \"DECODE_AUDIO_FILE_FAILED\";\n  AgoraRTCErrorCode[\"WS_ABORT\"] = \"WS_ABORT\";\n  AgoraRTCErrorCode[\"WS_DISCONNECT\"] = \"WS_DISCONNECT\";\n  AgoraRTCErrorCode[\"WS_ERR\"] = \"WS_ERR\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_TASK_CONFLICT\"] = \"LIVE_STREAMING_TASK_CONFLICT\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_INVALID_ARGUMENT\"] = \"LIVE_STREAMING_INVALID_ARGUMENT\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_INTERNAL_SERVER_ERROR\"] = \"LIVE_STREAMING_INTERNAL_SERVER_ERROR\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\"] = \"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\"] = \"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_CDN_ERROR\"] = \"LIVE_STREAMING_CDN_ERROR\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_INVALID_RAW_STREAM\"] = \"LIVE_STREAMING_INVALID_RAW_STREAM\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\"] = \"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\"] = \"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\";\n  AgoraRTCErrorCode[\"LIVE_STREAMING_WARN_FREQUENT_REQUEST\"] = \"LIVE_STREAMING_WARN_FREQUENT_REQUEST\";\n  AgoraRTCErrorCode[\"WEBGL_INTERNAL_ERROR\"] = \"WEBGL_INTERNAL_ERROR\";\n  AgoraRTCErrorCode[\"BEAUTY_PROCESSOR_INTERNAL_ERROR\"] = \"BEAUTY_PROCESSOR_INTERNAL_ERROR\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_WAIT_STATUS_ERROR\"] = \"CROSS_CHANNEL_WAIT_STATUS_ERROR\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_FAILED_JOIN_SRC\"] = \"CROSS_CHANNEL_FAILED_JOIN_SEC\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_FAILED_JOIN_DEST\"] = \"CROSS_CHANNEL_FAILED_JOIN_DEST\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\"] = \"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\";\n  AgoraRTCErrorCode[\"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\"] = \"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\";\n  AgoraRTCErrorCode[\"METADATA_OUT_OF_RANGE\"] = \"METADATA_OUT_OF_RANGE\";\n})(AgoraRTCErrorCode || (AgoraRTCErrorCode = {}));\n\nvar createClient = function createClient(config) {\n  var client;\n\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC__default.createClient(config);\n    }\n\n    return client;\n  }\n\n  return function () {\n    return createClosure();\n  };\n};\n\nfunction createMicrophoneAndCameraTracks(audioConfig, videoConfig) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAndCameraTracks(audioConfig, videoConfig)).then(function (_AgoraRTC$createMicro) {\n        tracks = _AgoraRTC$createMicro;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var tracks = null;\n  return function useMicrophoneAndCameraTracks() {\n    var _useState = useState(false),\n        ready = _useState[0],\n        setReady = _useState[1];\n\n    var _useState2 = useState(null),\n        agoraRTCError = _useState2[0],\n        setAgoraRTCError = _useState2[1];\n\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        tracks = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nfunction createBufferSourceAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createBufferSourceAudioTrack(config)).then(function (_AgoraRTC$createBuffe) {\n        track = _AgoraRTC$createBuffe;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useBufferSourceAudioTrack() {\n    var _useState3 = useState(false),\n        ready = _useState3[0],\n        setReady = _useState3[1];\n\n    var _useState4 = useState(null),\n        agoraRTCError = _useState4[0],\n        setAgoraRTCError = _useState4[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nfunction createCameraVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCameraVideoTrack(config)).then(function (_AgoraRTC$createCamer) {\n        track = _AgoraRTC$createCamer;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCameraVideoTrack() {\n    var _useState5 = useState(false),\n        ready = _useState5[0],\n        setReady = _useState5[1];\n\n    var _useState6 = useState(null),\n        agoraRTCError = _useState6[0],\n        setAgoraRTCError = _useState6[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nfunction createCustomAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomAudioTrack(config)).then(function (_AgoraRTC$createCusto) {\n        track = _AgoraRTC$createCusto;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCustomAudioTrack() {\n    var _useState7 = useState(false),\n        ready = _useState7[0],\n        setReady = _useState7[1];\n\n    var _useState8 = useState(null),\n        agoraRTCError = _useState8[0],\n        setAgoraRTCError = _useState8[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nfunction createCustomVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomVideoTrack(config)).then(function (_AgoraRTC$createCusto2) {\n        track = _AgoraRTC$createCusto2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCustomVideoTrack() {\n    var _useState9 = useState(false),\n        ready = _useState9[0],\n        setReady = _useState9[1];\n\n    var _useState10 = useState(null),\n        agoraRTCError = _useState10[0],\n        setAgoraRTCError = _useState10[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nfunction createMicrophoneAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAudioTrack(config)).then(function (_AgoraRTC$createMicro2) {\n        track = _AgoraRTC$createMicro2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useMicrophoneAudioTrack() {\n    var _useState11 = useState(false),\n        ready = _useState11[0],\n        setReady = _useState11[1];\n\n    var _useState12 = useState(null),\n        agoraRTCError = _useState12[0],\n        setAgoraRTCError = _useState12[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nfunction createScreenVideoTrack(config, withAudio) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createScreenVideoTrack(config, withAudio)).then(function (_AgoraRTC$createScree) {\n        tracks = _AgoraRTC$createScree;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var tracks;\n  return function useScreenVideoTrack() {\n    var _useState13 = useState(false),\n        ready = _useState13[0],\n        setReady = _useState13[1];\n\n    var _useState14 = useState(null),\n        agoraRTCError = _useState14[0],\n        setAgoraRTCError = _useState14[1];\n\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === undefined) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        }, function (e) {\n          setAgoraRTCError(e);\n        });\n      } else {\n        setReady(true);\n      }\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current,\n      error: agoraRTCError\n    };\n  };\n}\n\nvar AgoraVideoPlayer = function AgoraVideoPlayer(props) {\n  var vidDiv = useRef(null);\n\n  var videoTrack = props.videoTrack,\n      config = props.config,\n      other = _objectWithoutPropertiesLoose(props, [\"videoTrack\", \"config\"]);\n\n  useEffect(function () {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current, config);\n    return function () {\n      videoTrack.stop();\n    };\n  }, [videoTrack]);\n  return React.createElement(\"div\", Object.assign({}, other, {\n    ref: vidDiv\n  }));\n};\n\nexport default AgoraRTC__default;\nexport { AgoraRTCErrorCode, AgoraVideoPlayer, createBufferSourceAudioTrack, createCameraVideoTrack, createClient, createCustomAudioTrack, createCustomVideoTrack, createMicrophoneAndCameraTracks, createMicrophoneAudioTrack, createScreenVideoTrack };","map":{"version":3,"mappings":"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","names":["AgoraRTCErrorCode","createClient","config","client","createClosure","AgoraRTC","createMicrophoneAndCameraTracks","audioConfig","videoConfig","tracks","useMicrophoneAndCameraTracks","useState","ready","setReady","agoraRTCError","setAgoraRTCError","ref","useRef","useEffect","current","then","e","error","createBufferSourceAudioTrack","track","useBufferSourceAudioTrack","createCameraVideoTrack","useCameraVideoTrack","createCustomAudioTrack","useCustomAudioTrack","createCustomVideoTrack","useCustomVideoTrack","createMicrophoneAudioTrack","useMicrophoneAudioTrack","createScreenVideoTrack","withAudio","useScreenVideoTrack","undefined","AgoraVideoPlayer","props","vidDiv","videoTrack","other","play","stop","React"],"sources":["/Users/mbpa1502/Documents/kundaliweb/node_modules/agora-rtc-react/src/index.tsx"],"sourcesContent":["import React, { RefObject, useEffect, useRef, useState } from 'react'\nimport AgoraRTC, {\n  BufferSourceAudioTrackInitConfig,\n  CameraVideoTrackInitConfig,\n  ClientConfig,\n  CustomAudioTrackInitConfig,\n  CustomVideoTrackInitConfig,\n  IAgoraRTCClient,\n  IBufferSourceAudioTrack,\n  ICameraVideoTrack,\n  ILocalAudioTrack,\n  ILocalVideoTrack,\n  IMicrophoneAudioTrack,\n  IRemoteVideoTrack,\n  MicrophoneAudioTrackInitConfig,\n  ScreenVideoTrackInitConfig,\n  VideoPlayerConfig\n} from 'agora-rtc-sdk-ng'\n\nexport default AgoraRTC;\nexport * from 'agora-rtc-sdk-ng';\n\nexport interface AgoraRTCError {\n  code: AgoraRTCErrorCode;\n  message: string;\n  data?: any;\n  name: string;\n}\n\nexport enum AgoraRTCErrorCode {\n  UNEXPECTED_ERROR = \"UNEXPECTED_ERROR\",\n  UNEXPECTED_RESPONSE = \"UNEXPECTED_RESPONSE\",\n  TIMEOUT = \"TIMEOUT\",\n  INVALID_PARAMS = \"INVALID_PARAMS\",\n  NOT_SUPPORTED = \"NOT_SUPPORTED\",\n  INVALID_OPERATION = \"INVALID_OPERATION\",\n  OPERATION_ABORTED = \"OPERATION_ABORTED\",\n  WEB_SECURITY_RESTRICT = \"WEB_SECURITY_RESTRICT\",\n  NETWORK_ERROR = \"NETWORK_ERROR\",\n  NETWORK_TIMEOUT = \"NETWORK_TIMEOUT\",\n  NETWORK_RESPONSE_ERROR = \"NETWORK_RESPONSE_ERROR\",\n  API_INVOKE_TIMEOUT = \"API_INVOKE_TIMEOUT\",\n  ENUMERATE_DEVICES_FAILED = \"ENUMERATE_DEVICES_FAILED\",\n  DEVICE_NOT_FOUND = \"DEVICE_NOT_FOUND\",\n  ELECTRON_IS_NULL = \"ELECTRON_IS_NULL\",\n  ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR = \"ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR\",\n  CHROME_PLUGIN_NO_RESPONSE = \"CHROME_PLUGIN_NO_RESPONSE\",\n  CHROME_PLUGIN_NOT_INSTALL = \"CHROME_PLUGIN_NOT_INSTALL\",\n  MEDIA_OPTION_INVALID = \"MEDIA_OPTION_INVALID\",\n  PERMISSION_DENIED = \"PERMISSION_DENIED\",\n  CONSTRAINT_NOT_SATISFIED = \"CONSTRAINT_NOT_SATISFIED\",\n  TRACK_IS_DISABLED = \"TRACK_IS_DISABLED\",\n  SHARE_AUDIO_NOT_ALLOWED = \"SHARE_AUDIO_NOT_ALLOWED\",\n  LOW_STREAM_ENCODING_ERROR = \"LOW_STREAM_ENCODING_ERROR\",\n  INVALID_UINT_UID_FROM_STRING_UID = \"INVALID_UINT_UID_FROM_STRING_UID\",\n  CAN_NOT_GET_PROXY_SERVER = \"CAN_NOT_GET_PROXY_SERVER\",\n  CAN_NOT_GET_GATEWAY_SERVER = \"CAN_NOT_GET_GATEWAY_SERVER\",\n  VOID_GATEWAY_ADDRESS = \"VOID_GATEWAY_ADDRESS\",\n  UID_CONFLICT = \"UID_CONFLICT\",\n  INVALID_LOCAL_TRACK = \"INVALID_LOCAL_TRACK\",\n  INVALID_TRACK = \"INVALID_TRACK\",\n  SENDER_NOT_FOUND = \"SENDER_NOT_FOUND\",\n  CREATE_OFFER_FAILED = \"CREATE_OFFER_FAILED\",\n  SET_ANSWER_FAILED = \"SET_ANSWER_FAILED\",\n  ICE_FAILED = \"ICE_FAILED\",\n  PC_CLOSED = \"PC_CLOSED\",\n  SENDER_REPLACE_FAILED = \"SENDER_REPLACE_FAILED\",\n  GATEWAY_P2P_LOST = \"GATEWAY_P2P_LOST\",\n  NO_ICE_CANDIDATE = \"NO_ICE_CANDIDATE\",\n  CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS = \"CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS\",\n  EXIST_DISABLED_VIDEO_TRACK = \"EXIST_DISABLED_VIDEO_TRACK\",\n  INVALID_REMOTE_USER = \"INVALID_REMOTE_USER\",\n  REMOTE_USER_IS_NOT_PUBLISHED = \"REMOTE_USER_IS_NOT_PUBLISHED\",\n  CUSTOM_REPORT_SEND_FAILED = \"CUSTOM_REPORT_SEND_FAILED\",\n  CUSTOM_REPORT_FREQUENCY_TOO_HIGH = \"CUSTOM_REPORT_FREQUENCY_TOO_HIGH\",\n  FETCH_AUDIO_FILE_FAILED = \"FETCH_AUDIO_FILE_FAILED\",\n  READ_LOCAL_AUDIO_FILE_ERROR = \"READ_LOCAL_AUDIO_FILE_ERROR\",\n  DECODE_AUDIO_FILE_FAILED = \"DECODE_AUDIO_FILE_FAILED\",\n  WS_ABORT = \"WS_ABORT\",\n  WS_DISCONNECT = \"WS_DISCONNECT\",\n  WS_ERR = \"WS_ERR\",\n  LIVE_STREAMING_TASK_CONFLICT = \"LIVE_STREAMING_TASK_CONFLICT\",\n  LIVE_STREAMING_INVALID_ARGUMENT = \"LIVE_STREAMING_INVALID_ARGUMENT\",\n  LIVE_STREAMING_INTERNAL_SERVER_ERROR = \"LIVE_STREAMING_INTERNAL_SERVER_ERROR\",\n  LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED = \"LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED\",\n  LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED = \"LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED\",\n  LIVE_STREAMING_CDN_ERROR = \"LIVE_STREAMING_CDN_ERROR\",\n  LIVE_STREAMING_INVALID_RAW_STREAM = \"LIVE_STREAMING_INVALID_RAW_STREAM\",\n  LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT = \"LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT\",\n  LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE = \"LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE\",\n  LIVE_STREAMING_WARN_FREQUENT_REQUEST = \"LIVE_STREAMING_WARN_FREQUENT_REQUEST\",\n  WEBGL_INTERNAL_ERROR = \"WEBGL_INTERNAL_ERROR\",\n  BEAUTY_PROCESSOR_INTERNAL_ERROR = \"BEAUTY_PROCESSOR_INTERNAL_ERROR\",\n  CROSS_CHANNEL_WAIT_STATUS_ERROR = \"CROSS_CHANNEL_WAIT_STATUS_ERROR\",\n  CROSS_CHANNEL_FAILED_JOIN_SRC = \"CROSS_CHANNEL_FAILED_JOIN_SEC\",\n  CROSS_CHANNEL_FAILED_JOIN_DEST = \"CROSS_CHANNEL_FAILED_JOIN_DEST\",\n  CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST = \"CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST\",\n  CROSS_CHANNEL_SERVER_ERROR_RESPONSE = \"CROSS_CHANNEL_SERVER_ERROR_RESPONSE\",\n  METADATA_OUT_OF_RANGE = \"METADATA_OUT_OF_RANGE\"\n}\n\nexport const createClient = (config: ClientConfig) => {\n  let client: IAgoraRTCClient\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC.createClient(config)\n    }\n    return client\n  }\n  return () => createClosure()\n}\n\nexport function createMicrophoneAndCameraTracks(\n  audioConfig?: MicrophoneAudioTrackInitConfig | undefined,\n  videoConfig?: CameraVideoTrackInitConfig | undefined\n) {\n  let tracks: [IMicrophoneAudioTrack, ICameraVideoTrack] | null = null\n  async function createClosure() {\n    tracks = await AgoraRTC.createMicrophoneAndCameraTracks(\n      audioConfig,\n      videoConfig\n    )\n    return tracks\n  }\n  return function useMicrophoneAndCameraTracks() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(tracks)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((tracks) => {\n          ref.current = tracks\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        tracks = null\n      }\n    }, [])\n    return { ready, tracks: ref.current, error: agoraRTCError }\n  }\n}\n\nexport function createBufferSourceAudioTrack(\n  config: BufferSourceAudioTrackInitConfig\n) {\n  let track: IBufferSourceAudioTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createBufferSourceAudioTrack(config)\n    return track\n  }\n  return function useBufferSourceAudioTrack() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current, error: agoraRTCError }\n  }\n}\n\nexport function createCameraVideoTrack(config?: CameraVideoTrackInitConfig) {\n  let track: ICameraVideoTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createCameraVideoTrack(config)\n    return track\n  }\n  return function useCameraVideoTrack() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current, error: agoraRTCError }\n  }\n}\n\nexport function createCustomAudioTrack(config: CustomAudioTrackInitConfig) {\n  let track: ILocalAudioTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createCustomAudioTrack(config)\n    return track\n  }\n  return function useCustomAudioTrack() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current, error: agoraRTCError }\n  }\n}\n\nexport function createCustomVideoTrack(config: CustomVideoTrackInitConfig) {\n  let track: ILocalVideoTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createCustomVideoTrack(config)\n    return track\n  }\n  return function useCustomVideoTrack() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current, error: agoraRTCError }\n  }\n}\n\nexport function createMicrophoneAudioTrack(\n  config?: MicrophoneAudioTrackInitConfig\n) {\n  let track: IMicrophoneAudioTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createMicrophoneAudioTrack(config)\n    return track\n  }\n  return function useMicrophoneAudioTrack() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current, error: agoraRTCError }\n  }\n}\n\nexport function createScreenVideoTrack(\n  config: ScreenVideoTrackInitConfig,\n  withAudio?: 'enable' | 'disable' | 'auto'\n) {\n  let tracks: [ILocalVideoTrack, ILocalAudioTrack] | ILocalVideoTrack\n  async function createClosure() {\n    tracks = await AgoraRTC.createScreenVideoTrack(config, withAudio)\n    return tracks\n  }\n  return function useScreenVideoTrack() {\n    const [ready, setReady] = useState(false)\n    const [agoraRTCError, setAgoraRTCError] = useState<null | AgoraRTCError>(null)\n    const ref = useRef(tracks)\n\n    useEffect(() => {\n      if (ref.current === undefined) {\n        createClosure().then((tracks) => {\n          ref.current = tracks\n          setReady(true)\n        }, (e) => {\n          setAgoraRTCError(e)\n        })\n      } else {\n        setReady(true)\n      }\n    }, [])\n    return { ready, tracks: ref.current, error: agoraRTCError }\n  }\n}\n\n\nexport const AgoraVideoPlayer = (props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & { videoTrack: ILocalVideoTrack | IRemoteVideoTrack | ICameraVideoTrack } & {config?: VideoPlayerConfig}) => {\n  const vidDiv: RefObject<HTMLDivElement> = useRef(null)\n  const { videoTrack, config, ...other } = props;\n  useEffect(() => {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current, config)\n    return () => {\n      videoTrack.stop()\n    }\n  }, [videoTrack])\n\n  return <div {...other} ref={vidDiv} />\n}\n"]},"metadata":{},"sourceType":"module"}