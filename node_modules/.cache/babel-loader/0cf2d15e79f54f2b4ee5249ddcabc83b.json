{"ast":null,"code":"var _jsxFileName = \"/Users/mbpa1502/Documents/kundaliweb/src/Controls.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useClient } from \"./settings\";\nimport { Grid, Button } from \"@material-ui/core\"; // import MicIcon from \"@material-ui/icons/Mic\";\n// import MicOffIcon from \"@material-ui/icons/MicOff\";\n// import VideocamIcon from \"@material-ui/icons/Videocam\";\n// import VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\n// import ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Controls(props) {\n  _s();\n\n  const client = useClient();\n  const {\n    tracks,\n    setStart,\n    setInCall\n  } = props;\n  const [trackState, setTrackState] = useState({\n    video: true,\n    audio: true\n  });\n\n  const mute = async type => {\n    if (type === \"audio\") {\n      await tracks[0].setEnabled(!trackState.audio);\n      setTrackState(ps => {\n        return { ...ps,\n          audio: !ps.audio\n        };\n      });\n    } else if (type === \"video\") {\n      await tracks[1].setEnabled(!trackState.video);\n      setTrackState(ps => {\n        return { ...ps,\n          video: !ps.video\n        };\n      });\n    }\n  };\n\n  const leaveChannel = async () => {\n    await client.leave();\n    client.removeAllListeners();\n    tracks[0].close();\n    tracks[1].close();\n    setStart(false);\n    setInCall(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: trackState.audio ? \"primary\" : \"secondary\",\n        onClick: () => mute(\"audio\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: trackState.video ? \"primary\" : \"secondary\",\n        onClick: () => mute(\"video\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: () => leaveChannel(),\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Controls, \"Y53Zw7W8grmkulS4E9par+oO9fw=\", false, function () {\n  return [useClient];\n});\n\n_c = Controls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"sources":["/Users/mbpa1502/Documents/kundaliweb/src/Controls.js"],"names":["useState","useClient","Grid","Button","Controls","props","client","tracks","setStart","setInCall","trackState","setTrackState","video","audio","mute","type","setEnabled","ps","leaveChannel","leave","removeAllListeners","close"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useClient } from \"./settings\";\nimport { Grid, Button } from \"@material-ui/core\";\n// import MicIcon from \"@material-ui/icons/Mic\";\n// import MicOffIcon from \"@material-ui/icons/MicOff\";\n// import VideocamIcon from \"@material-ui/icons/Videocam\";\n// import VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\n// import ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nexport default function Controls(props) {\n  const client = useClient();\n  const { tracks, setStart, setInCall } = props;\n  const [trackState, setTrackState] = useState({ video: true, audio: true });\n\n  const mute = async (type) => {\n    if (type === \"audio\") {\n      await tracks[0].setEnabled(!trackState.audio);\n      setTrackState((ps) => {\n        return { ...ps, audio: !ps.audio };\n      });\n    } else if (type === \"video\") {\n      await tracks[1].setEnabled(!trackState.video);\n      setTrackState((ps) => {\n        return { ...ps, video: !ps.video };\n      });\n    }\n  };\n\n  const leaveChannel = async () => {\n    await client.leave();\n    client.removeAllListeners();\n    tracks[0].close();\n    tracks[1].close();\n    setStart(false);\n    setInCall(false);\n  };\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color={trackState.audio ? \"primary\" : \"secondary\"}\n          onClick={() => mute(\"audio\")}\n        >\n\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color={trackState.video ? \"primary\" : \"secondary\"}\n          onClick={() => mute(\"video\")}\n        >\n\n        </Button>\n      </Grid>\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          onClick={() => leaveChannel()}\n        >\n          Leave\n        \n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}