{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport AgoraRTC__default from 'agora-rtc-sdk-ng';\nexport * from 'agora-rtc-sdk-ng';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar createClient = function createClient(config) {\n  var client;\n\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC__default.createClient(config);\n    }\n\n    return client;\n  }\n\n  return function () {\n    return createClosure();\n  };\n};\n\nfunction createMicrophoneAndCameraTracks(audioConfig, videoConfig) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAndCameraTracks(audioConfig, videoConfig)).then(function (_AgoraRTC$createMicro) {\n        tracks = _AgoraRTC$createMicro;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var tracks = null;\n  return function useMicrophoneAndCameraTracks() {\n    var _useState = useState(false),\n        ready = _useState[0],\n        setReady = _useState[1];\n\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        tracks = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current\n    };\n  };\n}\n\nfunction createBufferSourceAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createBufferSourceAudioTrack(config)).then(function (_AgoraRTC$createBuffe) {\n        track = _AgoraRTC$createBuffe;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useBufferSourceAudioTrack() {\n    var _useState2 = useState(false),\n        ready = _useState2[0],\n        setReady = _useState2[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createCameraVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCameraVideoTrack(config)).then(function (_AgoraRTC$createCamer) {\n        track = _AgoraRTC$createCamer;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCameraVideoTrack() {\n    var _useState3 = useState(false),\n        ready = _useState3[0],\n        setReady = _useState3[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createCustomAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomAudioTrack(config)).then(function (_AgoraRTC$createCusto) {\n        track = _AgoraRTC$createCusto;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCustomAudioTrack() {\n    var _useState4 = useState(false),\n        ready = _useState4[0],\n        setReady = _useState4[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createCustomVideoTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createCustomVideoTrack(config)).then(function (_AgoraRTC$createCusto2) {\n        track = _AgoraRTC$createCusto2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useCustomVideoTrack() {\n    var _useState5 = useState(false),\n        ready = _useState5[0],\n        setReady = _useState5[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createMicrophoneAudioTrack(config) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createMicrophoneAudioTrack(config)).then(function (_AgoraRTC$createMicro2) {\n        track = _AgoraRTC$createMicro2;\n        return track;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var track = null;\n  return function useMicrophoneAudioTrack() {\n    var _useState6 = useState(false),\n        ready = _useState6[0],\n        setReady = _useState6[1];\n\n    var ref = useRef(track);\n    useEffect(function () {\n      if (ref.current === null) {\n        createClosure().then(function (track) {\n          ref.current = track;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n\n      return function () {\n        track = null;\n      };\n    }, []);\n    return {\n      ready: ready,\n      track: ref.current\n    };\n  };\n}\n\nfunction createScreenVideoTrack(config, withAudio) {\n  var createClosure = function createClosure() {\n    try {\n      return Promise.resolve(AgoraRTC__default.createScreenVideoTrack(config, withAudio)).then(function (_AgoraRTC$createScree) {\n        tracks = _AgoraRTC$createScree;\n        return tracks;\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  var tracks;\n  return function useScreenVideoTrack() {\n    var _useState7 = useState(false),\n        ready = _useState7[0],\n        setReady = _useState7[1];\n\n    var ref = useRef(tracks);\n    useEffect(function () {\n      if (ref.current === undefined) {\n        createClosure().then(function (tracks) {\n          ref.current = tracks;\n          setReady(true);\n        });\n      } else {\n        setReady(true);\n      }\n    }, []);\n    return {\n      ready: ready,\n      tracks: ref.current\n    };\n  };\n}\n\nvar AgoraVideoPlayer = function AgoraVideoPlayer(props) {\n  var vidDiv = useRef(null);\n\n  var videoTrack = props.videoTrack,\n      other = _objectWithoutPropertiesLoose(props, [\"videoTrack\"]);\n\n  useEffect(function () {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current);\n    return function () {\n      videoTrack.stop();\n    };\n  }, [videoTrack]);\n  return React.createElement(\"div\", Object.assign({}, other, {\n    ref: vidDiv\n  }));\n};\n\nexport default AgoraRTC__default;\nexport { AgoraVideoPlayer, createBufferSourceAudioTrack, createCameraVideoTrack, createClient, createCustomAudioTrack, createCustomVideoTrack, createMicrophoneAndCameraTracks, createMicrophoneAudioTrack, createScreenVideoTrack };","map":{"version":3,"mappings":"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","names":["createClient","config","client","createClosure","AgoraRTC","createMicrophoneAndCameraTracks","audioConfig","videoConfig","tracks","useMicrophoneAndCameraTracks","useState","ready","setReady","ref","useRef","useEffect","current","then","createBufferSourceAudioTrack","track","useBufferSourceAudioTrack","createCameraVideoTrack","useCameraVideoTrack","createCustomAudioTrack","useCustomAudioTrack","createCustomVideoTrack","useCustomVideoTrack","createMicrophoneAudioTrack","useMicrophoneAudioTrack","createScreenVideoTrack","withAudio","useScreenVideoTrack","undefined","AgoraVideoPlayer","props","vidDiv","videoTrack","other","play","stop","React"],"sources":["/Users/mbpa1502/Documents/kundaliweb/node_modules/agora-rtc-react/src/index.tsx"],"sourcesContent":["import React, { RefObject, useEffect, useRef, useState } from 'react'\nimport AgoraRTC, {\n  BufferSourceAudioTrackInitConfig,\n  CameraVideoTrackInitConfig,\n  ClientConfig,\n  CustomAudioTrackInitConfig,\n  CustomVideoTrackInitConfig,\n  IAgoraRTCClient,\n  IBufferSourceAudioTrack,\n  ICameraVideoTrack,\n  ILocalAudioTrack,\n  ILocalVideoTrack,\n  IMicrophoneAudioTrack,\n  IRemoteVideoTrack,\n  MicrophoneAudioTrackInitConfig,\n  ScreenVideoTrackInitConfig\n} from 'agora-rtc-sdk-ng'\n\nexport default AgoraRTC;\nexport * from 'agora-rtc-sdk-ng';\n\nexport const createClient = (config: ClientConfig) => {\n  let client: IAgoraRTCClient\n  function createClosure() {\n    if (!client) {\n      client = AgoraRTC.createClient(config)\n    }\n    return client\n  }\n  return () => createClosure()\n}\n\nexport function createMicrophoneAndCameraTracks(\n  audioConfig?: MicrophoneAudioTrackInitConfig | undefined,\n  videoConfig?: CameraVideoTrackInitConfig | undefined\n) {\n  let tracks: [IMicrophoneAudioTrack, ICameraVideoTrack] | null = null\n  async function createClosure() {\n    tracks = await AgoraRTC.createMicrophoneAndCameraTracks(\n      audioConfig,\n      videoConfig\n    )\n    return tracks\n  }\n  return function useMicrophoneAndCameraTracks() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(tracks)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((tracks) => {\n          ref.current = tracks\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        tracks = null\n      }\n    }, [])\n    return { ready, tracks: ref.current }\n  }\n}\n\nexport function createBufferSourceAudioTrack(\n  config: BufferSourceAudioTrackInitConfig\n) {\n  let track: IBufferSourceAudioTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createBufferSourceAudioTrack(config)\n    return track\n  }\n  return function useBufferSourceAudioTrack() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current }\n  }\n}\n\nexport function createCameraVideoTrack(config?: CameraVideoTrackInitConfig) {\n  let track: ICameraVideoTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createCameraVideoTrack(config)\n    return track\n  }\n  return function useCameraVideoTrack() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current }\n  }\n}\n\nexport function createCustomAudioTrack(config: CustomAudioTrackInitConfig) {\n  let track: ILocalAudioTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createCustomAudioTrack(config)\n    return track\n  }\n  return function useCustomAudioTrack() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current }\n  }\n}\n\nexport function createCustomVideoTrack(config: CustomVideoTrackInitConfig) {\n  let track: ILocalVideoTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createCustomVideoTrack(config)\n    return track\n  }\n  return function useCustomVideoTrack() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current }\n  }\n}\n\nexport function createMicrophoneAudioTrack(\n  config?: MicrophoneAudioTrackInitConfig\n) {\n  let track: IMicrophoneAudioTrack | null = null\n  async function createClosure() {\n    track = await AgoraRTC.createMicrophoneAudioTrack(config)\n    return track\n  }\n  return function useMicrophoneAudioTrack() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(track)\n\n    useEffect(() => {\n      if (ref.current === null) {\n        createClosure().then((track) => {\n          ref.current = track\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n      return () => {\n        track = null\n      }\n    }, [])\n    return { ready, track: ref.current }\n  }\n}\n\nexport function createScreenVideoTrack(\n  config: ScreenVideoTrackInitConfig,\n  withAudio?: 'enable' | 'disable' | 'auto'\n) {\n  let tracks: [ILocalVideoTrack, ILocalAudioTrack] | ILocalVideoTrack\n  async function createClosure() {\n    tracks = await AgoraRTC.createScreenVideoTrack(config, withAudio)\n    return tracks\n  }\n  return function useScreenVideoTrack() {\n    const [ready, setReady] = useState(false)\n    const ref = useRef(tracks)\n\n    useEffect(() => {\n      if (ref.current === undefined) {\n        createClosure().then((tracks) => {\n          ref.current = tracks\n          setReady(true)\n        })\n      } else {\n        setReady(true)\n      }\n    }, [])\n    return { ready, tracks: ref.current }\n  }\n}\n\n\nexport const AgoraVideoPlayer = (props: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & { videoTrack: ILocalVideoTrack | IRemoteVideoTrack | ICameraVideoTrack }) => {\n  const vidDiv: RefObject<HTMLDivElement> = useRef(null)\n  const { videoTrack, ...other } = props;\n  useEffect(() => {\n    if (vidDiv.current !== null) videoTrack.play(vidDiv.current)\n    return () => {\n      videoTrack.stop()\n    }\n  }, [videoTrack])\n\n  return <div {...other} ref={vidDiv} />\n}\n"]},"metadata":{},"sourceType":"module"}